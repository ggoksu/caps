#!/bin/bash

root_dir=$(cd $(dirname $BASH_SOURCE)/.. && pwd)
source $root_dir/bin/common
common::initialize

set -e

usage () {
    echo -e "\n${BLUE}USAGE: caps-ssh <NAME> [ -u|user <SSH_USER> ]\n"
    echo -e "    This utility will create launch an SSH session to an instance within the deployed"
    echo -e "    environment.\n"
    echo -e "    <NAME>               The name or IP of the instance to SSH to. If the name is 'bastion'"
    echo -e "                         then an SSH session will be created to the bastion instance. If the"
    echo -e "                         name is 'tunnel' then an SSH tunnel will be created to the VPC."
    echo -e "                         Otherwise it should be of the host prefix of the instance name."
    echo -e "                         For example <host prefix>.<vpc domain>."
    echo -e "    -u|user <SSH_USER>   The SSH user to login as. This will be ignored when you SSH to the"
    echo -e "                         bastion instance. For any other instance if this argument is not"
    echo -e "                         provided the default SSH user will be 'ubuntu'.\n"
}

case "$1" in
    -?|--help|help)
        usage
        exit 0
        ;;
    bastion)
        name=bastion
        ;;
    *)
        name=$1
        if [[ $(echo $name | cut -c1) == - ]]; then
            usage
            exit 1
        fi
        ;;
esac

shift
while [[ $# -gt 0 ]]; do
    case "$1" in
        -v|--debug)
            set -x
            ;;
        -u|user)
            ssh_user=$2
            shift
            ;;
        *)
            usage
            exit 1
            ;;
    esac
    shift
done

common::read_terraform_output

if [[ "$name" == "bastion" ]]; then

    ssh_host=$(echo -e "$tf_output" | awk '/bastion_admin_fqdn =/{ print $3 }')
    ssh_key=$workspace_path/bastion-admin-ssh-key.pem
    ssh_user=$TF_VAR_bastion_admin_user
    
    su_password=$(echo -e "$tf_output" | awk '/bastion_admin_password =/{ print $3 }')
else
    if [ $(echo "$name" | sed 's|[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*|ip|') == ip ]; then
        ssh_host=$name
    else
        vpc_domain_name=$(echo -e "$tf_output" | awk '/vpc_dns_zone =/{ print $3 }')
        ssh_host=$name.$vpc_domain_name
    fi
    ssh_key=$workspace_path/default-ssh-key.pem
    [[ -n $ssh_user ]] || ssh_user=ubuntu
fi

if [[ -z $ssh_host ]]; then
    echo "ERROR! Unable to validate host. The environment may not be initialized."
    exit 1
fi

echo -e "\nChecking connectivity to $ssh_host...\n  * This will hang if you are not logged on to the VPN."
nc -v -z -w 1 $ssh_host 22 >/dev/null 2>&1
if [[ $? -ne 0 ]]; then
    echo "ERROR! Unable to reach SSH port of $ssh_host."
    exit 1
fi

echo -e "\nCreating SSH session to $host...\n"
[[ -n $su_password ]] && echo -e "  The SU password is: $su_password\n"

ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i $ssh_key $ssh_user@$ssh_host
