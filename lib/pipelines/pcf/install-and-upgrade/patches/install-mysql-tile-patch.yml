- op: add
  path: /resources/-
  value:
    name: ${product_name}-tile
    type: pivnet
    source:
      api_token: ((pivnet_token))
      product_slug: ${product_slug}
      product_version: ${product_version}
      sort_by: semver

- op: add
  path: /jobs/-
  value:
    name: ${product_name}-tile-regulator
    plan:
    - get: schedule
      trigger: true
    - get: ${product_name}-tile
      params: {globs: []}
      # params:
      #   globs:
      #   - ((product_globs))

- op: add
  path: /jobs/-
  value:
    name: upload-${product_name}-tile
    serial_groups: [opsman]
    plan:
    - aggregate:
      - get: automation
      - get: pivnet-opsmgr
        passed: [deploy-director]
        trigger: true
        params: {globs: []}
      - get: pivnet-product
        resource: ${product_name}-tile
        passed: [${product_name}-tile-regulator]
        trigger: true
        params:
          globs:
          - ((product_globs))

    # Upload product tile and its stemcell
    - task: upload-tile
      file: automation/lib/pipelines/pcf/install-and-upgrade/tasks/upload-product-and-stemcell/task.yml
      params:
        IAAS: ((iaas_type))
        OPSMAN_HOST: ((opsman_domain_or_ip_address))
        OPSMAN_CLIENT_ID: ((opsman_client_id))
        OPSMAN_CLIENT_SECRET: ((opsman_client_secret))
        OPS_MGR_USR: ((opsman_admin_username))
        OPS_MGR_PWD: ((opsman_admin_password))
        PIVNET_API_TOKEN: ((pivnet_token))
        NO_PROXY: ''
        OM_IP: ''

    # Stage product tile
    - task: stage-tile
      file: automation/lib/pipelines/pcf/install-and-upgrade/tasks/stage-product/task.yml
      params:
        OPSMAN_HOST: ((opsman_domain_or_ip_address))
        OPSMAN_CLIENT_ID: ((opsman_client_id))
        OPSMAN_CLIENT_SECRET: ((opsman_client_secret))
        OPSMAN_USERNAME: ((opsman_admin_username))
        OPSMAN_PASSWORD: ((opsman_admin_password))
        STAGE_AND_APPLY: false
        ENABLE_ERRANDS: ((enable_errands))

- op: add
  path: /jobs/-
  value:
    name: configure-${product_name}-tile
    serial_groups: [opsman]
    plan:
    - aggregate:
      - get: automation
      - get: automation-extensions
      - get: terraform-output
      - get: pivnet-product
        resource: ${product_name}-tile
        passed: [upload-${product_name}-tile]
        trigger: true
        params: { globs: [] }

    # Configure product tile
    - task: configure
      file: automation/lib/pipelines/pcf/install-and-upgrade/tasks/configure-mysql/task.yml
      params:
        OPSMAN_HOST: ((opsman_domain_or_ip_address))
        OPSMAN_CLIENT_ID: ((opsman_client_id))
        OPSMAN_CLIENT_SECRET: ((opsman_client_secret))
        OPSMAN_USERNAME: ((opsman_admin_username))
        OPSMAN_PASSWORD: ((opsman_admin_password))
        # Product configuration
        PRODUCT_NAME: pivotal-mysql
        TEMPLATE_PATH: automation/lib/pipelines/pcf/install-and-upgrade/templates/mysql
        TEMPLATE_OVERRIDE_PATH: automation-extensions/((pcf_tile_templates_path))/mysql
        ERRANDS_TO_DISABLE: ${errands_to_enable}
        ERRANDS_TO_ENABLE: ${errands_to_disable}
        ERRAND_DEFAULT_IF_ENABLED: when-changed
        # Networking
        NETWORK_NAME: services-1
        SERVICE_NETWORK_NAME: dynamic-services-1
        SINGLETON_AVAILABILITY_ZONE: # Sourced from terraform output
        AVAILABILITY_ZONES: # Sourced from terraform output
        # Resources
        INTERNET_CONNECTED: false
        # Properties
        PLAN_1_MULTI_NODE_DEPLOYMENT: true
        PLAN_1_SERVICE_PLAN_ACCESS: "enable"
        PLAN_1_INSTANCE_LIMIT: 5
        PLAN_2_MULTI_NODE_DEPLOYMENT: true
        PLAN_2_SERVICE_PLAN_ACCESS: "enable"
        PLAN_2_INSTANCE_LIMIT: 5
        PLAN_3_MULTI_NODE_DEPLOYMENT: true
        PLAN_3_SERVICE_PLAN_ACCESS: "enable"
        PLAN_3_INSTANCE_LIMIT: 5
        S3_BACKUP_ACCESS_KEY_ID: ''
        S3_BACKUP_SECRET_ACCESS_KEY: ''
        S3_BACKUP_ENDPOINT_URL: ''
        S3_BACKUP_REGION: ''
        S3_BACKUP_BUCKET_NAME: ''
        S3_BACKUP_PATH: ''
        SCP_BACKUP_USER: ''
        SCP_BACKUP_SERVER: ''
        SCP_BACKUP_DESTINATION: ''
        SCP_BACKUP_FINGERPRINT: ''
        SCP_BACKUP_KEY: ''
        SCP_BACKUP_PORT: null
        GCS_BACKUP_PROJECT_ID: ''
        GCS_BACKUP_BUCKET_NAME: ''
        GCS_BACKUP_SERVICE_ACCOUNT_JSON: ''
        AZURE_BACKUP_ACCOUNT: ''
        AZURE_BACKUP_STORAGE_ACCESS_KEY: ''
        AZURE_BACKUP_PATH: ''
        AZURE_BACKUP_CONTAINER: ''
        AZURE_BACKUP_BLOB_STORE_BASE_URL: ''
        BACKUP_CRON_SCHEDULE: "0 */8 * * *"
        ENABLE_BACKUP_EMAIL_ALERTS: false
        SYSLOG_ADDRESS: ''
        SYSLOG_PORT: null
        SYSLOG_TRANSPORT: "tcp"
        SYSLOG_TLS: false
        SYSLOG_PERMITTED_PEER: ''
        SYSLOG_CA_CERT: ''

- op: add
  path: /jobs/name=deploy/plan/0/aggregate/-
  value:
    get: ${product_name}-tile
    passed: [configure-${product_name}-tile]
    trigger: true
    params: { globs: [] } 
