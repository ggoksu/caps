- type: replace
  path: /jobs/-
  value:
    name: configure-${product_name}-tile
    on_failure:
      do:
      - task: notify on configure-${product_name}-tile failure

    serial: true
    serial_groups: [configure]
    plan:
    - aggregate:
      - get: automation
      - get: automation-extensions
      - get: terraform-output
      - get: pivnet-product
        resource: ${product_name}-tile
        passed: [upload-${product_name}-tile]
        # trigger: true
        params:
          skip_download: true

    # Configure product tile
    - task: configure
      file: automation/lib/pipelines/pcf/install-and-upgrade/tasks/configure-pks/task.yml
      params:
        OPSMAN_HOST: ((opsman_host))
        OPSMAN_CLIENT_ID: ((opsman_client_id))
        OPSMAN_CLIENT_SECRET: ((opsman_client_secret))
        OPSMAN_USERNAME: ((opsman_admin_username))
        OPSMAN_PASSWORD: ((opsman_admin_password))
        # Product configuration
        PRODUCT_NAME: pivotal-container-service
        TEMPLATE_PATH: automation/lib/pipelines/pcf/install-and-upgrade/templates/pks
        TEMPLATE_OVERRIDE_PATH: automation-extensions/((pcf_tile_templates_path))/pks
        ERRANDS_TO_DISABLE: ${errands_to_enable}
        ERRANDS_TO_ENABLE: ${errands_to_disable}
        ERRAND_DEFAULT_IF_ENABLED: when-changed
        # Networking
        NETWORK_NAME: services
        SERVICE_NETWORK_NAME: dynamic-services
        SINGLETON_AVAILABILITY_ZONE: # Sourced from terraform output
        AVAILABILITY_ZONES: # Sourced from terraform output
        # Resources
        INTERNET_CONNECTED: false
        PKS_API_LB_NAME:
        # Properties
        PKS_API_URL: # Sourced from terraform output
        PKS_CERT: # Sourced from terraform output
        PKS_CERT_KEY: # Sourced from terraform output
        CLOUD_PROVIDER: gcp
        GCP_MASTER_SERVICE_ACCOUNT_KEY: ((gcp_service_account_key))
        GCP_WORKER_SERVICE_ACCOUNT_KEY: ((gcp_service_account_key))
        GCP_PROJECT_ID: ((gcp_project))
        VPC_NETWORK_NAME: # Sourced from terraform output
        PLAN1_WORKER_INSTANCES: 3
        PLAN1_ALLOW_PRIVILEGED_CONTAINERS: true
        PLAN1_AZ_PLACEMENT: '' # Sourced from terraform output
        PLAN2_WORKER_INSTANCES: 5
        PLAN2_ALLOW_PRIVILEGED_CONTAINERS: true
        PLAN2_AZ_PLACEMENT: '' # Sourced from terraform output
        PLAN3_WORKER_INSTANCES: 0
        PLAN3_ALLOW_PRIVILEGED_CONTAINERS: true
        PLAN3_AZ_PLACEMENT: '' # Sourced from terraform output

- type: replace
  path: /jobs/name=deploy/plan/0/aggregate/-
  value:
    get: ${product_name}-tile
    passed: [configure-${product_name}-tile]
    trigger: true
    params:
      skip_download: true
