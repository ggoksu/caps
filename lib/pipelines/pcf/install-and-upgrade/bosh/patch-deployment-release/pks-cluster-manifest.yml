addons:
- name: bosh-dns-aliases
  jobs:
  - name: kubo-dns-aliases
    release: kubo
name: service-instance_f7c3a1da-b705-4a7e-a8f8-0aa0532e213c
releases:
- name: kubo
  version: 0.21.13
- name: cfcr-etcd
  version: 1.4.1
- name: docker
  version: 32.0.3
- name: pks-nsx-t
  version: 1.19.0
- name: nsx-cf-cni
  version: 2.3.1.10693410
- name: pks-vrli
  version: 0.6.0
- name: pks-telemetry
  version: 0.9.4
- name: syslog
  version: 11.4.0
- name: bpm
  version: 0.6.0
- name: wavefront-proxy
  version: 0.9.0
- name: pks-helpers
  version: 50.0.0
- name: sink-resources-release
  version: 0.1.13
stemcells:
- alias: default
  os: ubuntu-xenial
  version: "97.52"
instance_groups:
- name: apply-addons
  lifecycle: errand
  instances: 1
  jobs:
  - name: apply-specs
    release: kubo
    consumes:
      cloud-provider:
        from: master-cloud-provider
    properties:
      addons:
      - kube-dns
      - metrics-server
      - heapster
      - kubernetes-dashboard
      addons-spec: |+
        ---
        apiVersion: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        metadata:
          name: clustersinks.apps.pivotal.io
        spec:
          group: apps.pivotal.io
          version: v1beta1
          versions:
            - name: v1beta1
              served: true
              storage: true
          scope: Cluster
          names:
            plural: clustersinks
            singular: clustersink
            kind: ClusterSink
          validation:
            openAPIV3Schema:
              properties:
                spec:
                  required:
                  - type
                  - port
                  - host
                  properties:
                    port:
                      type: integer
                      minimum: 0
                      maximum: 65535
                    type:
                      type: string
                      enum:
                      - syslog
                    host:
                      type: string
                      pattern: '^([a-zA-Z0-9-\.]+)$|^([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})$|^([a-fA-F0-9\:]+)$'
                    enable_tls:
                      type: boolean
                    insecure_skip_verify:
                      type: boolean
        ---
        apiVersion: apiextensions.k8s.io/v1beta1
        kind: CustomResourceDefinition
        metadata:
          name: sinks.apps.pivotal.io
        spec:
          group: apps.pivotal.io
          version: v1beta1
          versions:
            - name: v1beta1
              served: true
              storage: true
          scope: Namespaced
          names:
            plural: sinks
            singular: sink
            kind: Sink
          validation:
            openAPIV3Schema:
              properties:
                spec:
                  required:
                  - type
                  - port
                  - host
                  properties:
                    port:
                      type: integer
                      minimum: 0
                      maximum: 65535
                    type:
                      type: string
                      enum:
                      - syslog
                    host:
                      type: string
                      pattern: '^([a-zA-Z0-9-\.]+)$|^([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})$|^([a-fA-F0-9\:]+)$'
                    enable_tls:
                      type: boolean
                    insecure_skip_verify:
                      type: boolean
        ---
        apiVersion: v1
        kind: Namespace
        metadata:
          name: pks-system
        ---
        kind: ClusterRole
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: namespace-sink-modifier
        rules:
          # The sink-controller needs to patch the configmap for fluent-bit
        - apiGroups: [""] # "" indicates the core API group
          resources: ["configmaps"]
          verbs: ["get", "list", "watch", "patch"] # TODO: Do we need watch?
          # The sink-controller needs to be able to delete the fluent-bit pods
        - apiGroups: [""] # "" indicates the core API group
          resources: ["pods"]
          verbs: ["deletecollection"]
          # The sink-controller needs to be able to watch sinks and clustersinks
        - apiGroups: ["apps.pivotal.io"]
          resources: ["sinks", "clustersinks"]
          verbs: ["get", "list", "watch"]
        # This rule is for kubernetes-metadata-filter
        - apiGroups:
          - ""
          - "apps"
          - "batch"
          resources: ["*"]
          verbs: ["get", "list", "watch"]
        ---
        kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: service-account-namespace-sink-modifier
        subjects:
        - kind: ServiceAccount
          name: default
          namespace: pks-system
        roleRef:
          kind: ClusterRole
          name: namespace-sink-modifier
          apiGroup: rbac.authorization.k8s.io
        ---
        # https://raw.githubusercontent.com/fluent/fluent-bit-kubernetes-logging/master/output/elasticsearch/fluent-bit-configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: fluent-bit
          namespace: pks-system
          labels:
            k8s-app: fluent-bit
        data:
          # Configuration files: server, input, filters and output
          # ======================================================
          fluent-bit.conf: |
            [SERVICE]
                Flush         1
                Log_Level     info
                Daemon        off
                Parsers_File  parsers.conf
                HTTP_Server   On
                HTTP_Listen   0.0.0.0
                HTTP_Port     2020

            @INCLUDE inputs.conf
            @INCLUDE filters.conf
            @INCLUDE outputs.conf

          inputs.conf: |
            @INCLUDE input-kubernetes.conf

          filters.conf: |
            @INCLUDE filter-kubernetes.conf

          outputs.conf: |
            @INCLUDE output-null.conf

          input-kubernetes.conf: |
            [INPUT]
                Name              tail
                Tag               kube.*
                Path              /var/log/containers/*.log
                Parser            docker
                DB                /var/log/flb_kube.db
                Mem_Buf_Limit     5MB
                Skip_Long_Lines   On
                Refresh_Interval  10

          filter-kubernetes.conf: |
            [FILTER]
                Name                kubernetes
                Match               kube.*
                Kube_URL            https://kubernetes.default.svc.cluster.local:443
                Merge_Log           On
                K8S-Logging.Parser  On

          output-file.conf: |
            [OUTPUT]
                Name file
                Match *
                Path /tmp/output.txt

          output-null.conf: |
            [OUTPUT]
                Name null

          output-syslog.conf: |
            [OUTPUT]
                Name syslog
                Match *
                Sinks [{\"addr\":\"example.com:12345\"}]

          parsers.conf: |
            [PARSER]
                Name   apache
                Format regex
                Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
                Time_Key time
                Time_Format %d/%b/%Y:%H:%M:%S %z

            [PARSER]
                Name   apache2
                Format regex
                Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
                Time_Key time
                Time_Format %d/%b/%Y:%H:%M:%S %z

            [PARSER]
                Name   apache_error
                Format regex
                Regex  ^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])?( \[client (?<client>[^\]]*)\])? (?<message>.*)$

            [PARSER]
                Name   nginx
                Format regex
                Regex ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
                Time_Key time
                Time_Format %d/%b/%Y:%H:%M:%S %z

            [PARSER]
                Name   json
                Format json
                Time_Key time
                Time_Format %d/%b/%Y:%H:%M:%S %z

            [PARSER]
                Name        docker
                Format      json
                Time_Key    time
                Time_Format %Y-%m-%dT%H:%M:%S.%L
                Time_Keep   On
                # Command      |  Decoder | Field | Optional Action
                # =============|==================|=================
                Decode_Field_As   escaped    log

            [PARSER]
                Name        syslog
                Format      regex
                Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
                Time_Key    time
                Time_Format %b %d %H:%M:%S
        ---
        apiVersion: extensions/v1beta1
        kind: DaemonSet
        metadata:
          labels:
            k8s-app: logging-agent
            kubernetes.io/cluster-service: "true"
            version: v1
          name: fluent-bit
          namespace: pks-system
        spec:
          template:
            metadata:
              labels:
                k8s-app: logging-agent
                kubernetes.io/cluster-service: "true"
                version: v1
            spec:
              containers:
              - image: oratos/fluent-bit-out-syslog:v0.9
                imagePullPolicy: IfNotPresent
                name: fluent-bit
                resources:
                  limits:
                    memory: 100Mi
                  requests:
                    cpu: 100m
                    memory: 100Mi
                volumeMounts:
                - mountPath: /fluent-bit/etc
                  name: fluent-bit-config
                - mountPath: /var/log
                  name: varlog
                - mountPath: /var/lib/docker/containers
                  name: varlibdockercontainers
                  readOnly: true
                - mountPath: /var/vcap/store
                  name: varvcapstore
                  readOnly: true
                - mountPath: /var/vcap/data
                  name: varvcapdata
                  readOnly: true
              serviceAccountName: default
              terminationGracePeriodSeconds: 10
              volumes:
              - hostPath:
                  path: /var/log
                name: varlog
              - hostPath:
                  path: /var/lib/docker/containers
                name: varlibdockercontainers
              - hostPath:
                  path: /var/vcap/store/
                name: varvcapstore
              - hostPath:
                  path: /var/vcap/data/
                name: varvcapdata
              - configMap:
                  name: fluent-bit
                name: fluent-bit-config
          updateStrategy:
            type: RollingUpdate
        ---
        apiVersion: extensions/v1beta1
        kind: Deployment
        metadata:
          name: sink-controller
          namespace: pks-system
        spec:
          replicas: 1
          template:
            metadata:
              labels:
                app: sink-controller
            spec:
              containers:
              - env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: oratos/sink-controller:v0.10
                imagePullPolicy: IfNotPresent
                name: sink-controller

        ---

      admin-password: r1hkgA-0_uTwc2Y0e2MNgcDn
      admin-username: admin
      api-token: ((kubelet-password))
      tls:
        heapster:
          ca: ((kubo_ca.certificate))((kubo_ca_2018.certificate))
          certificate: ((tls-heapster.certificate))
          private_key: ((tls-heapster.private_key))
        influxdb:
          ca: ((kubo_ca.certificate))((kubo_ca_2018.certificate))
          certificate: ((tls-influxdb.certificate))
          private_key: ((tls-influxdb.private_key))
        kubernetes:
          ca: ((tls-kubernetes.ca))((tls-kubernetes-2018.ca))
          certificate: ((tls-kubernetes.certificate))
          private_key: ((tls-kubernetes.private_key))
        kubernetes-dashboard:
          ca: ((kubernetes-dashboard-ca.certificate))((kubernetes-dashboard-ca-2018.certificate))
          certificate: ((tls-kubernetes-dashboard.certificate))
          private_key: ((tls-kubernetes-dashboard.private_key))
        metrics-server:
          ca: ((kubo_ca.certificate))((kubo_ca_2018.certificate))
          certificate: ((tls-metrics-server.certificate))
          private_key: ((tls-metrics-server.private_key))
  - name: syslog_forwarder
    release: syslog
    properties:
      syslog:
        address: ""
        ca_cert: null
        migration:
          disabled: false
        permitted_peer: ""
        port: "514"
        tls_enabled: false
        transport: tcp
  - name: wavefront-proxy-errand
    release: wavefront-proxy
    properties:
      authorization-mode: rbac
      kubernetes-apiserver-ip: master.cfcr.internal
      kubernetes-apiserver-port: 8443
      wavefront-api-url: ignored
      wavefront-token: ignored
  - name: telemetry-pod
    release: pks-telemetry
    properties:
      interval: 600
      telemetry_ip: 192.168.8.11
      telemetry_url: telemetry.pks.internal:8011
  vm_type: micro
  stemcell: default
  azs:
  - europe-west1-b
  - europe-west1-c
  - europe-west1-d
  networks:
  - name: dynamic-services
- name: master
  instances: 1
  jobs:
  - name: bpm
    release: bpm
  - name: flanneld
    release: kubo
  - name: kube-apiserver
    release: kubo
    consumes:
      cloud-provider:
        from: master-cloud-provider
    properties:
      admin-password: r1hkgA-0_uTwc2Y0e2MNgcDn
      admin-username: admin
      allow_privileged: true
      backend_port: 8443
      kube-controller-manager-password: ((kube-controller-manager-password))
      kube-proxy-password: ((kube-proxy-password))
      kube-scheduler-password: ((kube-scheduler-password))
      kubelet-drain-password: ((kubelet-drain-password))
      kubelet-password: ((kubelet-password))
      oidc:
        ca: |
          -----BEGIN CERTIFICATE-----
          MIIFrzCCA5egAwIBAgIQA6qcGA3QaxPirKHQBBMQazANBgkqhkiG9w0BAQsFADB0
          MQswCQYDVQQGEwJBRTEPMA0GA1UECBMGRHViYXl5MQ4wDAYDVQQHEwVEdWJhaTEZ
          MBcGA1UEChMQUGl2b3RhbCBTZXJ2aWNlczERMA8GA1UECxMIUFNPIEVNRUExFjAU
          BgNVBAMTDUxvY2FsIFJvb3QgQ0EwHhcNMTgxMTE2MTk0MzUxWhcNMjgxMTEzMTk0
          MzUxWjCBgTELMAkGA1UEBhMCQUUxDzANBgNVBAgTBkR1YmF5eTEOMAwGA1UEBxMF
          RHViYWkxGTAXBgNVBAoTEFBpdm90YWwgU2VydmljZXMxETAPBgNVBAsTCFBTTyBF
          TUVBMSMwIQYDVQQDExpzYW5kYm94LmRlbW8xLnBvY3MucGNmcy5pbzCCASIwDQYJ
          KoZIhvcNAQEBBQADggEPADCCAQoCggEBANmSMDTfMtUCQMGFdDUE+FuzqbqAADLn
          Rctv0zytfQrZkKXp3XLOZ90KxCEdkgHn49ba7cWH70WkCfm1oR66p9AWk2O9h4Oy
          2HWhbKpCZXTyyl3aoXIaydq5R9JLpUE+tdplCnr0UpaAFOW3JJU3+h/lKYb1dIjo
          7mVkLs30B7efkMQSmYcuEErYVE50vAyBaiEej9+Pda3feWhP4JoK5oxSvPw3qYwZ
          rIwfi7hn0AN7ZtFYxm+Gucz+rNV/sbrUNp/0lSVDt1VGyBkVurT07LeEX+D5h5o2
          3psySdgttK4CcdvwW2GhexN86aE+jyAMhFA8/VpDBhGjllExwvTKq/0CAwEAAaOC
          AS0wggEpMA4GA1UdDwEB/wQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAMBgNV
          HRMBAf8EAjAAMB8GA1UdIwQYMBaAFL57wdql2qf4o61PX29+T5ymRJyOMIHSBgNV
          HREEgcowgceCFCouZGVtbzEucG9jcy5wY2ZzLmlvghwqLnNhbmRib3guZGVtbzEu
          cG9jcy5wY2ZzLmlvgiEqLmFwcHMuc2FuZGJveC5kZW1vMS5wb2NzLnBjZnMuaW+C
          ICouc3lzLnNhbmRib3guZGVtbzEucG9jcy5wY2ZzLmlvgiQqLnVhYS5zeXMuc2Fu
          ZGJveC5kZW1vMS5wb2NzLnBjZnMuaW+CJioubG9naW4uc3lzLnNhbmRib3guZGVt
          bzEucG9jcy5wY2ZzLmlvMA0GCSqGSIb3DQEBCwUAA4ICAQC7NQPldiCXVkBkzYjf
          02KnXX9UOJJi8QbNlqkKssnSXN6hvEXcNz+xgD+wNlUsL9sUjdTMto7F2T2a94KO
          R/neqfw+dWZeZyreG2Whk5q2J3oZ31v2mnuxQpvrUBncScUXaPgX+hjGqnvxeO6b
          kBdMpkYpB1WXRpLi9hJz7a1fMPyE7swaoYGEob2nYeRj0SaPmzcugahZLGqEXO9X
          x+ZMYu/qVBSJY7NZ0EAdlQ1OzPudbRquOK7mw8UI6+lk6YdjR23gC18wqs+5sY7d
          salWErSzWk76fAuaAQ5C4UkTQByNoGQt2nlLDL/0NIrAJHVEzppM77yyss05CmFU
          VzaVBAFGo6IbdnTGtpIohCPYuOoM+ZGGyuXB6uY+4BrPByHET14ry0Tty3qWt++r
          bqXVWzLhRRQu4up0nuQLmZS7+ujVZs/p7/J0fjLvA0GezYI2q/MxhtH2H/uq7B3Q
          mPwbUg5sUfZuGzBpaTMm0yH5MQmJAm1plxbnrilhs936iFmskJcA/jJ0x0VTKlxU
          JzdiEj+knrYnIHQKI+qyK/RHoG5jxGp3yuvltP32tcfUOhk55DuROb5T6LoD9oUt
          hTrbaQfPaxfg10OTH7sB4zHNUPMfGDxAfXXwJ2te2xFPeh3JLzwb5/JAYWTOfRWh
          ew6GXFcbFhF+RFNBQ8n2U9oylA==
          -----END CERTIFICATE-----
        client-id: pks_cluster_client
        groups-claim: roles
        groups-prefix: ""
        issuer-url: https://pks.sandbox.demo1.pocs.pcfs.io:8443/oauth/token
        username-claim: user_name
        username-prefix: '-'
      port: 8443
      route-sync-password: ((route-sync-password))
      service-account-public-key: ((service-account-key.public_key))
      tls:
        kubelet-client:
          ca: ((kubo_ca.certificate))((kubo_ca_2018.certificate))
          certificate: ((tls-kubelet-client.certificate))
          private_key: ((tls-kubelet-client.private_key))
        kubernetes:
          ca: ((tls-kubernetes.ca))((tls-kubernetes-2018.ca))
          certificate: ((tls-kubernetes.certificate))
          private_key: ((tls-kubernetes.private_key))
  - name: kube-controller-manager
    release: kubo
    consumes:
      cloud-provider:
        from: master-cloud-provider
    properties:
      api-token: ((kube-controller-manager-password))
      cluster-signing: ((kubo_ca))
      service-account-private-key: ((service-account-key.private_key))
      tls:
        kubernetes:
          ca: ((tls-kubernetes.ca))((tls-kubernetes-2018.ca))
          certificate: ((tls-kubernetes.certificate))
          private_key: ((tls-kubernetes.private_key))
  - name: kube-scheduler
    release: kubo
    properties:
      api-token: ((kube-scheduler-password))
      tls:
        kubernetes:
          ca: ((tls-kubernetes.ca))((tls-kubernetes-2018.ca))
          certificate: ((tls-kubernetes.certificate))
          private_key: ((tls-kubernetes.private_key))
  - name: kubernetes-roles
    release: kubo
    consumes:
      cloud-provider:
        from: master-cloud-provider
    properties:
      admin-password: r1hkgA-0_uTwc2Y0e2MNgcDn
      admin-username: admin
      tls:
        kubernetes:
          ca: ((tls-kubernetes.ca))((tls-kubernetes-2018.ca))
          certificate: ((tls-kubernetes.certificate))
          private_key: ((tls-kubernetes.private_key))
  - name: etcd
    release: cfcr-etcd
    properties:
      etcd:
        dns_suffix: etcd.cfcr.internal
      tls:
        etcd:
          ca: ((kubo_ca.certificate))((kubo_ca_2018.certificate))
          certificate: ((tls-etcd-v0-17-0.certificate))
          private_key: ((tls-etcd-v0-17-0.private_key))
        etcdctl:
          ca: ((kubo_ca.certificate))((kubo_ca_2018.certificate))
          certificate: ((tls-etcdctl.certificate))
          private_key: ((tls-etcdctl.private_key))
        peer:
          ca: ((kubo_ca.certificate))((kubo_ca_2018.certificate))
          certificate: ((tls-etcd-v0-17-0.certificate))
          private_key: ((tls-etcd-v0-17-0.private_key))
  - name: smoke-tests
    release: kubo
  - name: pks-master-aliases
    release: pks-helpers
    consumes:
      pks_api_shared:
        deployment: pivotal-container-service-e93f34a0256555976125
        from: pks_api_shared_http
  - name: cloud-provider
    release: kubo
    provides:
      cloud-provider:
        as: master-cloud-provider
    properties:
      cloud-provider:
        gce:
          network-name: pcf-demo-1-sandbox-network
          project-id: cso-pcfs-emea-mevansam
          worker-node-tag: service-instance-f7c3a1da-b705-4a7e-a8f8-0aa0532e213c-worker
        type: gce
  - name: syslog_forwarder
    release: syslog
    properties:
      syslog:
        address: ""
        ca_cert: null
        migration:
          disabled: false
        permitted_peer: ""
        port: "514"
        tls_enabled: false
        transport: tcp
  - name: bbr-etcd
    release: cfcr-etcd
  - name: bbr-kube-apiserver
    release: kubo
  vm_type: medium
  vm_extensions:
  - service_account_master
  stemcell: default
  persistent_disk_type: "10240"
  azs:
  - europe-west1-b
  - europe-west1-c
  - europe-west1-d
  networks:
  - name: dynamic-services
- name: worker
  instances: 3
  jobs:
  - name: flanneld
    release: kubo
  - name: docker
    release: docker
    properties:
      bridge: cni0
      default_ulimits:
      - nofile=65536
      env: {}
      flannel: true
      ip_masq: false
      iptables: false
      log_level: error
      log_options:
      - max-size=128m
      - max-file=2
      storage_driver: overlay2
      store_dir: /var/vcap/store
      tls_cacert: ((kubo_ca.certificate))((kubo_ca_2018.certificate))
      tls_cert: ((tls-docker.certificate))
      tls_key: ((tls-docker.private_key))
  - name: kubernetes-dependencies
    release: kubo
    properties:
      nfs: true
  - name: kubelet
    release: kubo
    consumes:
      cloud-provider:
        from: worker-cloud-provider
    properties:
      allow_privileged: true
      api-token: ((kubelet-password))
      cloud-provider: gce
      drain-api-token: ((kubelet-drain-password))
      tls:
        kubelet:
          ca: ((kubo_ca.certificate))((kubo_ca_2018.certificate))
          certificate: ((tls-kubelet.certificate))
          private_key: ((tls-kubelet.private_key))
        kubelet-client-ca:
          certificate: ((kubo_ca.certificate))((kubo_ca_2018.certificate))
        kubernetes:
          ca: ((tls-kubernetes.ca))((tls-kubernetes-2018.ca))
          certificate: ((tls-kubernetes.certificate))
          private_key: ((tls-kubernetes.private_key))
  - name: kube-proxy
    release: kubo
    properties:
      api-token: ((kube-proxy-password))
      cloud-provider: gce
      tls:
        kubernetes:
          ca: ((tls-kubernetes.ca))((tls-kubernetes-2018.ca))
          certificate: ((tls-kubernetes.certificate))
          private_key: ((tls-kubernetes.private_key))
  - name: drain-cluster
    release: pks-helpers
  - name: cloud-provider
    release: kubo
    provides:
      cloud-provider:
        as: worker-cloud-provider
    properties:
      cloud-provider:
        gce:
          network-name: pcf-demo-1-sandbox-network
          project-id: cso-pcfs-emea-mevansam
          worker-node-tag: service-instance-f7c3a1da-b705-4a7e-a8f8-0aa0532e213c-worker
        type: gce
  - name: syslog_forwarder
    release: syslog
    properties:
      syslog:
        address: ""
        ca_cert: null
        migration:
          disabled: false
        permitted_peer: ""
        port: "514"
        tls_enabled: false
        transport: tcp
  - name: wavefront-proxy-images
    release: wavefront-proxy
  - name: telemetry-images
    release: pks-telemetry
    consumes:
      pks_telemetry:
        deployment: pivotal-container-service-e93f34a0256555976125
        from: pks_telemetry
    properties:
      telemetry_ca: |-
        -----BEGIN CERTIFICATE-----
        MIIC+zCCAeOgAwIBAgIUD9BMbUDHpihRZAvVAYWzDJZr2dEwDQYJKoZIhvcNAQEL
        BQAwDTELMAkGA1UEAxMCY2EwHhcNMTgxMTE2MjI0NTUxWhcNMTkxMTE2MjI0NTUx
        WjANMQswCQYDVQQDEwJjYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
        ANLegUpS+2WBN6+y5Gy8VLKXQuyvI8e+LIUxsA1REO1o8UQWUHq5sxfpeLdA81x8
        xF3GVNxKXo8gtPlWhZ0lHeDlNaqlUpdFGVmfmc8kQgV9cs03jcNrl+w+LTuW3y8e
        CjEBDMMbFShMMDtBMqAfyJiqRMEZSn7Pe05Us6hrKgox95g6q5khCfq/PPaUz9gd
        rFdJZ3qD8dKzCxrJigI+t/mK+Ya8EfBZEzbcQ2ujfim+67aoliCcJB+GYkk5nZny
        Ph5dvXsvV5T//4BbtTjKcDGy4i8qJ9l/JNTJ9GyXWPXALI6ulIG3nefNbuTpDJo+
        Kzpqev/IcIsR/J8SzcbwcuMCAwEAAaNTMFEwHQYDVR0OBBYEFMt1jRTEjp3SnHwc
        ub0ahuQmFXp+MB8GA1UdIwQYMBaAFMt1jRTEjp3SnHwcub0ahuQmFXp+MA8GA1Ud
        EwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHdUQCalZFhiP9rX5kBk4/O/
        I+Mpydko33QgpYO95gKcU7/6t7o9dhJ9SsURMUZ4xc/mYvX3aAF/HJJ7wRY4w/x9
        A0qWsu3viuBzau+T/KokSrW4mRe3EilnzjtPPFSmx+MUmVcyk3crFCfHDxgsWfg7
        pG7PIkfo5q1/ld4JCLbh263HP3fQxeYYi+D9TLayYTeo8H89SgPp7AEGuq3wybvy
        T/TFW9dQoiyemj8DTXXSXVQX68BpAaDqivh8ibyPqARcLpTnByhLqnGwQ57WGTDa
        y3ag+rmjsip7wFzbEHKyYdr/PzeiODdudJTCpJA1pAJblpqmadObFoKFThGGkrI=
        -----END CERTIFICATE-----
  - name: sink-resources-images
    release: sink-resources-release
  vm_type: medium
  vm_extensions:
  - service_account_worker
  stemcell: default
  persistent_disk_type: "51200"
  azs:
  - europe-west1-b
  - europe-west1-c
  - europe-west1-d
  networks:
  - name: dynamic-services
  update:
    canaries: 1
    canary_watch_time: 10000-300000
    update_watch_time: 10000-300000
    max_in_flight: 1
    serial: true
update:
  canaries: 1
  canary_watch_time: 10000-300000
  update_watch_time: 10000-300000
  max_in_flight: 1
  serial: true
properties:
  kubernetes-api-url: https://pks-releng.sandbox.demo1.pocs.pcfs.io:8443
variables:
- name: kubelet-password
  type: password
- name: kubelet-drain-password
  type: password
- name: kube-proxy-password
  type: password
- name: kube-controller-manager-password
  type: password
- name: kube-scheduler-password
  type: password
- name: route-sync-password
  type: password
- name: kubo_ca
  type: certificate
  options:
    common_name: ca
    is_ca: true
- name: tls-kubelet
  type: certificate
  options:
    alternative_names: []
    ca: kubo_ca
    common_name: kubelet.cfcr.internal
    organization: system:nodes
- name: tls-kubelet-client
  type: certificate
  options:
    ca: kubo_ca
    common_name: kube-apiserver.cfcr.internal
    extended_key_usage:
    - client_auth
    organization: system:masters
- name: tls-kubernetes
  type: certificate
  options:
    alternative_names:
    - 10.100.200.1
    - kubernetes
    - kubernetes.default
    - kubernetes.default.svc
    - kubernetes.default.svc.cluster.local
    - master.cfcr.internal
    - pks-releng.sandbox.demo1.pocs.pcfs.io
    ca: /p-bosh/pivotal-container-service-e93f34a0256555976125/kubo_odb_ca
    common_name: pks-releng.sandbox.demo1.pocs.pcfs.io
    organization: system:masters
- name: service-account-key
  type: rsa
- name: tls-docker
  type: certificate
  options:
    ca: kubo_ca
    common_name: docker.cfcr.internal
- name: tls-etcd-v0-17-0
  type: certificate
  options:
    ca: kubo_ca
    common_name: '*.etcd.cfcr.internal'
    extended_key_usage:
    - client_auth
    - server_auth
- name: tls-etcdctl
  type: certificate
  options:
    ca: kubo_ca
    common_name: etcdClient
    extended_key_usage:
    - client_auth
- name: tls-metrics-server
  type: certificate
  options:
    alternative_names:
    - metrics-server.kube-system.svc
    ca: kubo_ca
    common_name: metrics-server
- name: tls-heapster
  type: certificate
  options:
    alternative_names:
    - heapster.kube-system.svc.cluster.local
    ca: kubo_ca
    common_name: heapster
- name: tls-influxdb
  type: certificate
  options:
    alternative_names: []
    ca: kubo_ca
    common_name: monitoring-influxdb
- name: kubernetes-dashboard-ca
  type: certificate
  options:
    common_name: ca
    is_ca: true
- name: tls-kubernetes-dashboard
  type: certificate
  options:
    alternative_names: []
    ca: kubernetes-dashboard-ca
    common_name: kubernetesdashboard.cfcr.internal
- name: kubo_ca_2018
  type: certificate
  options:
    common_name: ca
    duration: 1461
    is_ca: true
- name: kubernetes-dashboard-ca-2018
  type: certificate
  options:
    common_name: ca
    duration: 1461
    is_ca: true
- name: tls-kubernetes-2018
  type: certificate
  options:
    alternative_names:
    - 10.100.200.1
    - kubernetes
    - kubernetes.default
    - kubernetes.default.svc
    - kubernetes.default.svc.cluster.local
    - master.cfcr.internal
    - external
    - pks-releng.sandbox.demo1.pocs.pcfs.io
    ca: /p-bosh/pivotal-container-service-e93f34a0256555976125/kubo_odb_ca_2018
    common_name: pks-releng.sandbox.demo1.pocs.pcfs.io
    organization: system:masters
features:
  use_dns_addresses: true
