---
groups:
- name: Install & Upgrade Director
  jobs:
  - destroy-env
  - upload-opsman-image
  - create-infrastructure
  - configure-director
  - deploy-director
- name: Install & Upgrade Products

resources:
- name: automation
  type: git
  source:
    uri: ((automation_pipelines_repo))
    branch: ((automation_pipelines_branch))

- name: automation-extensions
  type: git
  source:
    uri: ((automation_extensions_repo))
    branch: ((automation_extensions_branch))

- name: opsman-image
  type: s3
  source:
    bucket: pcf
    endpoint: ((autos3_url))
    access_key_id: ((autos3_access_key))
    secret_access_key: ((autos3_secret_key))
    regexp: downloads/ops-manager_(.*).tgz

jobs:

- name: upload-opsman-image
  on_failure:
    do:
    - task: notify on upload-opsman-image failure

  serial: true
  plan:
  - aggregate:
    - get: automation
    - get: pivnet-download
      resource: opsman-image
      trigger: true

  # Upload new Ops Manager image to the IAAS
  - task: upload
    file: automation/lib/pipelines/pcf/install-and-upgrade/tasks/upload-opsman/vsphere/task.yml
    params:
      GCP_PROJECT: ((gcp_project))
      GCP_REGION: ((gcp_region))
      GCP_SERVICE_ACCOUNT_KEY: ((gcp_service_account_key))

  # Wait if the Ops Manager is currently in the
  # process of applying a change
  - task: wait-if-apply-in-progress
    file: automation/lib/tasks/opsman/wait-opsman/task.yml
    params:
      OPSMAN_HOST: ((opsman_host))
      OPSMAN_USERNAME: ((opsman_admin_username))
      OPSMAN_PASSWORD: ((opsman_admin_password))
      OPSMAN_CLIENT_ID: ((opsman_client_id))
      OPSMAN_CLIENT_SECRET: ((opsman_client_secret))

  # If a new Ops Manager has been uploaded to the  
  # IaaS then set the director to a not-ready state 
  # so the new one can be deployed
  - task: set-director-not-ready
    file: automation/lib/inceptor/tasks/toggle-state/task.yml
    params: 
      OFF_STATE: director_ready
      ON_STATE: director_not_ready
      AUTOS3_URL: ((autos3_url))
      AUTOS3_ACCESS_KEY: ((autos3_access_key))
      AUTOS3_SECRET_KEY: ((autos3_secret_key))
