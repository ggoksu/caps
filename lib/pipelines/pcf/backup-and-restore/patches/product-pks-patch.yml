# #
# # Backup Pivotal Container Service
# #

# - type: replace
#   path: /resources/-
#   value:
#     name: backup-pks-timestamp
#     type: keyval

# - type: replace
#   path: /jobs/-
#   value:
#     name: backup-pks
#     serial: true
#     on_failure:
#       do:
#       - task: notify on backup-pks failure
#     plan:

#     - aggregate:
#       - get: automation
#       - get: daily
#         trigger: true

#     # Wait for director to be in a ready state
#     - task: wait-for-director-to-be-ready
#       file: automation/lib/inceptor/tasks/wait-for-state/task.yml
#       params: 
#         WAIT_FOR_STATE: director_ready
#         AUTOS3_URL: ((autos3_url))
#         AUTOS3_ACCESS_KEY: ((autos3_access_key))
#         AUTOS3_SECRET_KEY: ((autos3_secret_key))
    
#     # This task will wait until the 
#     # environment is in a started state
#     - task: wait-until-started
#       file: automation/lib/inceptor/tasks/wait-for-state/task.yml
#       params: 
#         WAIT_FOR_STATE: started
#         AUTOS3_URL: ((autos3_url))
#         AUTOS3_ACCESS_KEY: ((autos3_access_key))
#         AUTOS3_SECRET_KEY: ((autos3_secret_key))

#     # Wait if an opsman is currently in the process of applying a change
#     - task: wait-if-apply-in-progress
#       file: automation/lib/tasks/opsman/wait-opsman/task.yml
#       params:
#         TRACE: ((trace))
#         SSH_KEY: ((ssh_key))
#         OPSMAN_HOST: ((opsman_host))
#         OPSMAN_USERNAME: ((opsman_username))
#         OPSMAN_PASSWORD: ((opsman_password))
#         OPSMAN_SSH_USER: ((opsman_ssh_user))
#         OPSMAN_SSH_PASSWD: ((opsman_ssh_passwd))
#         OPSMAN_DECRYPTION_KEY: ((opsman_pass_phrase))
#         OPSMAN_CLIENT_ID: ((pcfops_client))
#         OPSMAN_CLIENT_SECRET: ((pcfops_secret))

#     - task: prepare-backup
#       privileged: true
#       file: automation/lib/pipelines/pcf/backup-and-restore/tasks/prepare-opsman-backup/task.yml
#       params: 
#         TRACE: ((trace))
#         SSH_KEY: ((ssh_key))
#         OPSMAN_HOST: ((opsman_host))
#         OPSMAN_USERNAME: ((opsman_username))
#         OPSMAN_PASSWORD: ((opsman_password))
#         OPSMAN_SSH_USER: ((opsman_ssh_user))
#         OPSMAN_SSH_PASSWD: ((opsman_ssh_passwd))
#         OPSMAN_DECRYPTION_KEY: ((opsman_pass_phrase))
#         OPSMAN_CLIENT_ID: ((pcfops_client))
#         OPSMAN_CLIENT_SECRET: ((pcfops_secret))

#         ## Backup storage backend type should be one of 'scp', 's3', 'gcs', 'swift'
#         BACKUP_TYPE: ((backup_storage_type))
#         BACKUP_TARGET: ((backup_target))
        
#         ## Credentials for GCS access
#         GCP_SERVICE_ACCOUNT_KEY: ((gcp_service_account_key))
#         GCS_BUCKET_NAME: ((gcs_bucket_name))

#         ## GCS mount path
#         GCS_MOUNT: ((gcs_mount))

#     - task: backup-pks-tile
#       privileged: true
#       file: automation/lib/tasks/bbr/backup-pks/task.yml
#       params: 
#         TRACE: ((trace))
#         SSH_KEY: ((ssh_key))

#         ## Backup storage backend type should be one of 'scp', 's3', 'gcs', 'swift'
#         BACKUP_TYPE: ((backup_storage_type))
#         BACKUP_TARGET: ((backup_target))
        
#         ## Credentials for GCS access
#         GCP_SERVICE_ACCOUNT_KEY: ((gcp_service_account_key))
#         GCS_BUCKET_NAME: ((gcs_bucket_name))

#         ## GCS mount path
#         GCS_MOUNT: ((gcs_mount))

#     - task: cleanup
#       privileged: true
#       file: automation/lib/tasks/bbr/cleanup/task.yml
#       params: 
#         TRACE: ((trace))
#         SSH_KEY: ((ssh_key))
#         OPSMAN_HOST: ((opsman_host))
#         OPSMAN_USERNAME: ((opsman_username))
#         OPSMAN_PASSWORD: ((opsman_password))
#         OPSMAN_SSH_USER: ((opsman_ssh_user))
#         OPSMAN_SSH_PASSWD: ((opsman_ssh_passwd))
#         OPSMAN_DECRYPTION_KEY: ((opsman_pass_phrase))
#         OPSMAN_CLIENT_ID: ((pcfops_client))
#         OPSMAN_CLIENT_SECRET: ((pcfops_secret))

#         ## Backup storage backend type should be one of 'scp', 's3', 'gcs', 'swift'
#         BACKUP_TYPE: ((backup_storage_type))
#         BACKUP_TARGET: ((backup_target))
        
#         ## Credentials for GCS access
#         GCP_SERVICE_ACCOUNT_KEY: ((gcp_service_account_key))
#         GCS_BUCKET_NAME: ((gcs_bucket_name))

#         ## GCS mount path
#         GCS_MOUNT: ((gcs_mount))

#     - put: backup-pks-timestamp
#       params:
#         file: backup-timestamp/metadata

# #
# # Restore Pivotal Container Service
# #

# - type: replace
#   path: /jobs/-
#   value:
#     name: restore-pks
#     serial: true
#     on_failure:
#       do:
#       - task: notify on backup-pks failure
#     plan:

#     - aggregate:
#       - get: automation
#       - get: backup-opsman-timestamp
#         passed: [backup-ops-manager]    